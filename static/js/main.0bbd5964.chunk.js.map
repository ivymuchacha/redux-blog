{"version":3,"sources":["blog/utils.js","blog/WebAPI.js","blog/redux/reducers/userReducer.js","blog/components/Navbar/Navbar.js","blog/redux/reducers/postReducer.js","blog/components/Pages/Homepage/Homepage.js","blog/components/Pages/Loginpage/Loginpage.js","blog/components/Pages/RegisterPage/RegisterPage.js","blog/components/Pages/NewPost/NewPost.js","blog/components/Pages/PostList/PostList.js","blog/components/Pages/EditPost/EditPost.js","blog/components/Pages/Page/Page.js","blog/components/Pages/About/About.js","blog/redux/store.js","blog/components/App/App.js","index.js"],"names":["TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","usePrevious","value","ref","useRef","useEffect","current","BASE_URL","getMe","fetch","headers","authorization","then","res","json","userReducer","createSlice","name","initialState","user","errorMessage","reducers","setUser","state","action","payload","setErrorMessage","actions","setNullErrorMessage","dispatch","getUser","username","password","method","body","JSON","stringify","login","ok","response","toString","data","message","register","nickname","registerAPI","Navbar","styled","div","NavList","LeftContainer","Brand","Link","Nav","props","$active","App","location","useLocation","history","useHistory","useDispatch","useSelector","store","users","to","pathname","onClick","push","postReducer","isLoadingPost","limitPosts","posts","post","editPostResponse","newPostResponse","isLoadingNewPost","setIsLoadingPost","setPosts","setLimitPosts","setPost","setNewPostResponse","setIsLoadingNewPost","setEditPostResponse","getAllPosts","getSomePosts","page","getSomePostsAPI","getPost","id","getPostAPI","addPost","title","newPost","editPost","editPostAPI","console","log","setNullEditPost","deletePost","deletePostAPI","Root","PostContainer","PostTitle","PostTime","Button","Flex","Post","handleDelete","Date","createdAt","toLocaleString","map","LoginBoard","form","Title","h2","InputContent","InputName","Input","input","button","ErrorMessage","h3","LoginInput","inputName","inputType","onChange","type","useState","setUsername","setPassword","onSubmit","e","target","setNickname","PostBoard","textarea","PostInput","rows","setTitle","setBody","prevIsLoadingNewPost","Paginator","Page","Loading","pages","setPages","allPages","setAllPages","isLoading","listOfPage","i","Math","ceil","length","handleClick","useParams","postId","PostContent","configureStore","reducer","exact","path","Homepage","RegisterPage","About","PostList","NewPost","EditPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bbd5964.chunk.js","sourcesContent":["/* eslint-disable import/no-unresolved */\nimport { useEffect, useRef } from 'react';\n\nconst TOKEN_NAME = 'token';\n\nexport const setAuthToken = token => localStorage.setItem(TOKEN_NAME, token);\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n\nexport function usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import { getAuthToken } from './utils';\n\nconst BASE_URL = 'https://student-json-api.lidemy.me';\n\nexport const getPosts = () => fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then(res => res.json());\n\nexport const getSomePosts = page => fetch(\n  `${BASE_URL}/posts?_sort=createdAt&_order=desc&_limit=5&_page=${page}`,\n).then(res => res.json());\n\nexport const getPost = id => fetch(`${BASE_URL}/posts/${id}`).then(res => res.json());\n\nexport const deletePost = id => fetch(`${BASE_URL}/posts/${id}`, {\n  method: 'DELETE',\n  headers: {\n    'content-type': 'application/json',\n  },\n}).then(res => res.json());\n\nexport const editPost = (id, { title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then(res => res.json());\n};\n\nexport const login = (username, password) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then(res => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then(res => res.json());\n};\n\nexport const newPost = ({ title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then(res => res.json());\n};\n\nexport const register = (nickname, username, password) => fetch(`${BASE_URL}/register`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json',\n  },\n  body: JSON.stringify({\n    nickname,\n    username,\n    password,\n  }),\n}).then(res => res.json());\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-unresolved */\nimport { createSlice } from '@reduxjs/toolkit';\nimport { login, getMe, register as registerAPI } from '../../WebAPI';\nimport { setAuthToken } from '../../utils';\n\nexport const userReducer = createSlice({\n  name: 'users',\n  initialState: {\n    user: null,\n\n    errorMessage: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\nexport const { setUser, setErrorMessage } = userReducer.actions;\n\nexport const setNullErrorMessage = () => (dispatch) => {\n  dispatch(setErrorMessage(null));\n};\n\nexport const getUser = (username, password) => (dispatch) => {\n  login(username, password).then((res) => {\n    if (res.ok === 0) {\n      dispatch(setErrorMessage(res.message));\n      return;\n    }\n    setAuthToken(res.token);\n\n    getMe().then((response) => {\n      if (response.ok !== 1) {\n        dispatch(setErrorMessage(response.toString()));\n        setAuthToken(null);\n        return;\n      }\n      dispatch(setUser(response.data));\n    });\n  });\n};\n\nexport const getMeUser = () => (dispatch) => {\n  getMe().then((response) => {\n    if (response.ok) {\n      dispatch(setUser(response.data));\n    }\n  });\n};\n\nexport const logOut = () => (dispatch) => {\n  dispatch(setUser(null));\n};\n\nexport const register = (nickname, username, password) => (dispatch) => {\n  setErrorMessage(null);\n  registerAPI(nickname, username, password).then((data) => {\n    if (data.ok !== 1) {\n      dispatch(setErrorMessage(data.message));\n      return;\n    }\n    setAuthToken(data.token);\n\n    getMe().then((response) => {\n      if (response.ok !== 1) {\n        dispatch(setErrorMessage(response.toString()));\n        setAuthToken(null);\n        return;\n      }\n      dispatch(setUser(response.data));\n    });\n  });\n};\n\nexport default userReducer.reducer;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAuthToken } from '../../utils';\nimport { logOut } from '../../redux/reducers/userReducer';\n\nconst Navbar = styled.div`\n  display: flex;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  height: 64px;\n  position: fixed;\n  border: 1px solid #bfc0c0;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 30px;\n  background: white;\n`;\n\nconst NavList = styled.div`\n  display: flex;\n  height: 64px;\n`;\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${NavList} {\n    margin-left: 30px;\n  }\n`;\n\nconst Brand = styled(Link)`\n  color: #2d3142;\n  text-decoration: none;\n  font-size: 32px;\n  font-weight: bold;\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  width: 100px;\n  justify-content: center;\n  align-items: center;\n  color: #4f5d75;\n  text-decoration: none;\n  height: 100%;\n  box-sizing: border-box;\n\n  ${props => props.$active && 'background: rgba(0, 0, 0, 0.2)'}\n`;\n\nfunction App() {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(store => store.users.user);\n\n  const handleLogout = () => {\n    setAuthToken('');\n    dispatch(logOut());\n    if (location.pathname !== '/') {\n      history.push('/');\n    }\n  };\n\n  return (\n    <Navbar>\n      <LeftContainer>\n        <Brand to=\"/\">部落格 Blog</Brand>\n        <NavList>\n          <Nav to=\"/\" $active={location.pathname === '/'}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === '/about'}>\n            關於我\n          </Nav>\n          <Nav to=\"/post-list\" $active={location.pathname === '/post-list'}>\n            文章列表\n          </Nav>\n        </NavList>\n      </LeftContainer>\n      <NavList>\n        {!user && (\n          <Nav to=\"/register\" $active={location.pathname === '/register'}>\n            註冊\n          </Nav>\n        )}\n        {!user && (\n          <Nav to=\"/login\" $active={location.pathname === '/login'}>\n            登入\n          </Nav>\n        )}\n        {user && (\n          <Nav to=\"/new-post\" $active={location.pathname === '/new-post'}>\n            發布文章\n          </Nav>\n        )}\n        {user && <Nav onClick={handleLogout}>登出</Nav>}\n      </NavList>\n    </Navbar>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-unresolved */\nimport { createSlice } from '@reduxjs/toolkit';\nimport {\n  editPost as editPostAPI,\n  getSomePosts as getSomePostsAPI,\n  getPosts as getPostsAPI,\n  getPost as getPostAPI,\n  newPost,\n  deletePost as deletePostAPI,\n} from '../../WebAPI';\n\nexport const postReducer = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoadingPost: false,\n    limitPosts: null,\n    posts: null,\n    post: null,\n\n    editPostResponse: null,\n    newPostResponse: null,\n    isLoadingNewPost: false,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n\n    setPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n\n    setLimitPosts: (state, action) => {\n      state.limitPosts = action.payload;\n    },\n\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n\n    setIsLoadingNewPost: (state, action) => {\n      state.isLoadingNewPost = action.payload;\n    },\n\n    setEditPostResponse: (state, action) => {\n      state.editPostResponse = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingPost,\n  setLimitPosts,\n  setPosts,\n  setPost,\n  setNewPostResponse,\n  setIsLoadingNewPost,\n  setEditPostResponse,\n} = postReducer.actions;\n\nexport const getAllPosts = () => (dispatch) => {\n  getPostsAPI().then((res) => {\n    dispatch(setPosts(res));\n  });\n};\n\nexport const getSomePosts = page => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getSomePostsAPI(page).then((res) => {\n    dispatch(setLimitPosts(res));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const getPost = id => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id).then((res) => {\n    dispatch(setPost(res));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const addPost = data => (dispatch) => {\n  dispatch(setIsLoadingNewPost(true));\n  return newPost(data).then((res) => {\n    dispatch(setNewPostResponse(res));\n    dispatch(setIsLoadingNewPost(false));\n    return res;\n  });\n};\n\nexport const editPost = (id, data) => (dispatch) => {\n  dispatch(setIsLoadingNewPost(true));\n  return editPostAPI(id, data).then((res) => {\n    dispatch(setEditPostResponse(res));\n    dispatch(setIsLoadingNewPost(false));\n    console.log(res);\n    return res;\n  });\n};\n\nexport const setNullEditPost = () => (dispatch) => {\n  dispatch(setPost(null));\n};\n\nexport const deletePost = id => () => {\n  deletePostAPI(id);\n};\n\nexport default postReducer.reducer;\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deletePost, getAllPosts } from '../../../redux/reducers/postReducer';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #bfc0c0;\n  padding: 20px;\n  :hover {\n    background: #bfc0c0;\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n  align-items: center;\n  display: flex;\n  max-width: 550px;\n`;\n\nconst PostTime = styled.div`\n  color: #4f5d75;\n  display: flex;\n  align-items: center;\n`;\n\nconst Button = styled(Link)`\n  margin-left: 10px;\n  padding: 10px;\n  border: 1px solid #ef8354;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 14px;\n  align-items: center;\n  display: flex;\n}\n`;\n\nconst Flex = styled.div`\n  display: flex;\n`;\n\nfunction Post({ post, user, handleDelete }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <Flex>\n        <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n        {user && <Button to={`/edit-post/${post.id}`}>編輯</Button>}\n        {user && (\n          <Button\n            onClick={() => {\n              handleDelete(post.id);\n            }}\n          >\n            刪除\n          </Button>\n        )}\n      </Flex>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.object).isRequired,\n  user: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nfunction App() {\n  const user = useSelector(store => store.users.user);\n  const posts = useSelector(store => store.posts.posts);\n  const dispatch = useDispatch();\n  const handleDelete = (id) => {\n    dispatch(deletePost(id));\n  };\n\n  useEffect(() => {\n    dispatch(getAllPosts());\n  }, [posts, dispatch]);\n\n  return (\n    <Root>\n      {posts\n        && posts.map(post => (\n          <Post\n            key={post.id}\n            post={post}\n            user={user}\n            handleDelete={handleDelete}\n          />\n        ))}\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  getUser,\n  setNullErrorMessage,\n} from '../../../redux/reducers/userReducer';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst LoginBoard = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  height: 280px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n`;\nconst InputContent = styled.div`\n  margin: 10px 0;\n  display: flex;\n  justify-content: center;\n`;\nconst InputName = styled.div`\n  font-size: 16px;\n  color: #ffffff;\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n  width: 200px;\n  border: none;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n`;\n\nfunction LoginInput({\n  inputName, inputType, value, onChange,\n}) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nLoginInput.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  inputType: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector(store => store.users.user);\n  const errorMessage = useSelector(store => store.users.errorMessage);\n\n  const handleSubmit = () => {\n    dispatch(getUser(username, password));\n  };\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n    }\n    return () => {\n      dispatch(setNullErrorMessage());\n    };\n  }, [user, history, dispatch]);\n\n  return (\n    <Root>\n      <LoginBoard onSubmit={handleSubmit}>\n        <Title>Login</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <LoginInput\n          inputName=\"Username：\"\n          inputType=\"text\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <LoginInput\n          inputName=\"Passwrod：\"\n          inputType=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <Button>Submit</Button>\n      </LoginBoard>\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  register,\n  setNullErrorMessage,\n} from '../../../redux/reducers/userReducer';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst LoginBoard = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  min-height: 300px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n`;\nconst InputContent = styled.div`\n  margin: 10px 0;\n  display: flex;\n  justify-content: center;\n`;\nconst InputName = styled.div`\n  font-size: 16px;\n  color: #ffffff;\n`;\nconst Input = styled.input`\n  padding: 5px;\n  width: 200px;\n  border: none;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n`;\n\nfunction LoginInput({\n  inputName, inputType, value, onChange,\n}) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nLoginInput.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  inputType: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nfunction App() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [nickname, setNickname] = useState('');\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const errorMessage = useSelector(store => store.users.errorMessage);\n  const user = useSelector(store => store.users.user);\n\n  const handleSubmit = () => {\n    dispatch(register(nickname, username, password));\n  };\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n    }\n    return () => {\n      dispatch(setNullErrorMessage());\n    };\n  }, [user, history]);\n\n  return (\n    <Root>\n      <LoginBoard onSubmit={handleSubmit}>\n        <Title>Register</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <LoginInput\n          inputName=\"Nickname：\"\n          inputType=\"text\"\n          value={nickname}\n          onChange={(e) => {\n            setNickname(e.target.value);\n          }}\n        />\n        <LoginInput\n          inputName=\"Username：\"\n          inputType=\"text\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <LoginInput\n          inputName=\"Passwrod：\"\n          inputType=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <Button>Submit</Button>\n      </LoginBoard>\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../../../redux/reducers/postReducer';\nimport { usePrevious } from '../../../utils';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst PostBoard = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  height: 500px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n`;\nconst InputContent = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  text-align: left;\n`;\nconst InputName = styled.div`\n  font-size: 18px;\n  color: #ffffff;\n  margin: 5px;\n`;\nconst Input = styled.textarea`\n  padding: 5px;\n  width: 450px;\n  border: none;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n`;\n\nfunction PostInput({\n  inputName, inputType, value, onChange, rows,\n}) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input rows={rows} type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nPostInput.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  inputType: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  rows: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const newPostResponse = useSelector(store => store.posts.newPostResponse);\n  const isLoadingNewPost = useSelector(store => store.posts.isLoadingNewPost);\n  const prevIsLoadingNewPost = usePrevious(isLoadingNewPost);\n\n  const handleSubmit = () => {\n    setErrorMessage(null);\n    if (!title || !body) {\n      return setErrorMessage('Please Filled Out the Form.');\n    }\n\n    return dispatch(addPost({ title, body }));\n  };\n\n  useEffect(() => {\n    if (!isLoadingNewPost && prevIsLoadingNewPost) {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(`/post/${newPostResponse.id}`);\n      }\n    }\n  }, [newPostResponse, history, isLoadingNewPost, prevIsLoadingNewPost]);\n\n  return (\n    <Root>\n      <PostBoard onSubmit={handleSubmit}>\n        <Title>發布文章</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <PostInput\n          inputName=\"Title：\"\n          inputType=\"text\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        />\n        <PostInput\n          inputName=\"Content：\"\n          inputType=\"text\"\n          rows=\"10\"\n          value={body}\n          onChange={(e) => {\n            setBody(e.target.value);\n          }}\n        />\n        <Button>Submit</Button>\n      </PostBoard>\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllPosts, getSomePosts } from '../../../redux/reducers/postReducer';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #bfc0c0;\n  padding: 20px;\n  :hover {\n    background: #bfc0c0;\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n`;\n\nconst PostTime = styled.div`\n  color: #4f5d75;\n`;\n\nconst Paginator = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Page = styled.div`\n  width: 10px;\n  margin-top: 20px;\n  padding: 5px 10px;\n  background: #ef8354;\n  color: #ffffff;\n  cursor: pointer;\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  bottom: 0px;\n  position: absolute;\n  background: rgba(0, 0, 0, 0.2);\n  justify-content: center;\n  font-size: 25px;\n  text-align: center;\n  align-items: center;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.object).isRequired,\n};\n\nfunction App() {\n  const [pages, setPages] = useState([1]);\n  const [allPages, setAllPages] = useState([]);\n  const dispatch = useDispatch();\n  const posts = useSelector(store => store.posts.posts);\n  const isLoading = useSelector(store => store.posts.isLoadingPost);\n  const limitPosts = useSelector(store => store.posts.limitPosts);\n\n  useEffect(() => {\n    dispatch(getAllPosts());\n    if (posts) {\n      const listOfPage = [];\n      for (let i = 1; i <= Math.ceil(posts.length / 5); i += 1) {\n        listOfPage.push(i);\n      }\n      setAllPages(listOfPage);\n    }\n  }, [posts]);\n\n  useEffect(() => {\n    dispatch(getSomePosts(pages));\n  }, [pages, dispatch]);\n\n  const handleClick = (page) => {\n    setPages(page);\n  };\n\n  return (\n    <Root>\n      {isLoading && <Loading>載入中</Loading>}\n      {limitPosts\n        && limitPosts.map(post => <Post key={post.id} post={post} />)}\n      <Paginator>\n        {allPages.map(page => (\n          <Page key={page} onClick={() => handleClick(page)}>\n            {page}\n          </Page>\n        ))}\n      </Paginator>\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable import/no-unresolved */\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  editPost,\n  getPost,\n  setNullEditPost,\n} from '../../../redux/reducers/postReducer';\nimport { usePrevious } from '../../../utils';\n\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst PostBoard = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  height: 500px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n`;\nconst InputContent = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  text-align: left;\n`;\nconst InputName = styled.div`\n  font-size: 18px;\n  color: #ffffff;\n  margin: 5px;\n`;\nconst Input = styled.textarea`\n  padding: 5px;\n  width: 450px;\n  border: none;\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n`;\n\nfunction PostInput({\n  inputName, inputType, value, onChange, rows,\n}) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input rows={rows} type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nPostInput.propTypes = {\n  inputName: PropTypes.string.isRequired,\n  inputType: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  rows: PropTypes.number.isRequired,\n};\n\nfunction App() {\n  const { id } = useParams();\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const post = useSelector(store => store.posts.post);\n  const editPostResponse = useSelector(store => store.posts.editPostResponse);\n  const isLoadingNewPost = useSelector(store => store.posts.isLoadingNewPost);\n  const prevIsLoadingNewPost = usePrevious(isLoadingNewPost);\n\n  const handleSubmit = (postId) => {\n    setErrorMessage(null);\n    if (!title || !body) {\n      return setErrorMessage('Please Filled Out the Form.');\n    }\n    return dispatch(editPost(postId, { title, body }));\n  };\n\n  useEffect(() => {\n    if (!isLoadingNewPost && !prevIsLoadingNewPost) {\n      dispatch(getPost(id));\n      if (post) {\n        setTitle(post.title);\n        setBody(post.body);\n      }\n    }\n\n    if (!isLoadingNewPost && prevIsLoadingNewPost) {\n      if (editPostResponse && editPostResponse.id) {\n        history.push(`/post/${editPostResponse.id}`);\n      }\n    }\n\n    return () => {\n      dispatch(setNullEditPost());\n    };\n  }, [id, editPostResponse, history, isLoadingNewPost, prevIsLoadingNewPost]);\n\n  return (\n    <Root>\n      <PostBoard onSubmit={() => handleSubmit(post.id)}>\n        <Title>編輯文章</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        {post && (\n          <PostInput\n            inputName=\"Title：\"\n            inputType=\"text\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n          />\n        )}\n        {post && (\n          <PostInput\n            inputName=\"Content：\"\n            inputType=\"text\"\n            rows=\"10\"\n            value={body}\n            onChange={(e) => {\n              setBody(e.target.value);\n            }}\n          />\n        )}\n        <Button>Submit</Button>\n      </PostBoard>\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getPost,\n  deletePost,\n  setNullEditPost,\n} from '../../../redux/reducers/postReducer';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid grey;\n  padding: 20px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n`;\n\nconst PostTime = styled.div`\n  color: #4f5d75;\n  display: flex;\n  align-items: center;\n`;\n\nconst PostContent = styled.div`\n  padding: 20px;\n  color: #4f5d75;\n  line-height: 2em;\n  word-break: break-all;\n  white-space: break-spaces;\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  bottom: 0px;\n  position: absolute;\n  background: rgba(0, 0, 0, 0.2);\n  justify-content: center;\n  font-size: 25px;\n  text-align: center;\n  align-items: center;\n`;\n\nconst Button = styled(Link)`\n  margin-left: 10px;\n  padding: 10px;\n  border: 1px solid #ef8354;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 14px;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n`;\n\nfunction App() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isLoading = useSelector(store => store.posts.isLoadingPost);\n  const post = useSelector(store => store.posts.post);\n  const user = useSelector(store => store.users.user);\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId));\n    history.push('/');\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id));\n\n    return () => {\n      dispatch(setNullEditPost());\n    };\n  }, [id, dispatch]);\n\n  return (\n    <Root>\n      {post && (\n        <>\n          <PostContainer>\n            <PostTitle>{post.title}</PostTitle>\n            <Flex>\n              <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n              {user && <Button to={`/edit-post/${post.id}`}>編輯</Button>}\n              {user && (\n                <Button\n                  onClick={() => {\n                    handleDelete(post.id);\n                  }}\n                >\n                  刪除\n                </Button>\n              )}\n            </Flex>\n          </PostContainer>\n          <PostContent>{post.body}</PostContent>\n        </>\n      )}\n      {isLoading && <Loading>載入中</Loading>}\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid grey;\n  padding: 20px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n`;\n\nconst PostContent = styled.div`\n  padding: 20px;\n  color: #4f5d75;\n  line-height: 2em;\n  word-break: break-all;\n  white-space: break-spaces;\n`;\n\nfunction App() {\n  return (\n    <Root>\n      <PostContainer>\n        <PostTitle>關於我</PostTitle>\n      </PostContainer>\n      <PostContent>安安你好啊～ 這是我的部落格</PostContent>\n    </Root>\n  );\n}\n\nexport default App;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-unresolved */\nimport { configureStore } from '@reduxjs/toolkit';\nimport postReducer from './reducers/postReducer';\nimport userReducer from './reducers/userReducer';\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer,\n  },\n});\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React, { useEffect } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Provider, useDispatch } from 'react-redux';\nimport Navbar from '../Navbar';\nimport Homepage from '../Pages/Homepage';\nimport LoginPage from '../Pages/Loginpage';\nimport RegisterPage from '../Pages/RegisterPage';\nimport NewPost from '../Pages/NewPost';\nimport PostList from '../Pages/PostList';\nimport EditPost from '../Pages/EditPost';\nimport Page from '../Pages/Page';\nimport AboutPage from '../Pages/About';\nimport { getAuthToken } from '../../utils';\nimport store from '../../redux/store';\nimport { getMeUser } from '../../redux/reducers/userReducer';\n\nconst Root = styled.div`\n  padding-top: 64px;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = getAuthToken();\n    if (token) {\n      dispatch(getMeUser());\n    }\n  }, [dispatch]);\n\n  return (\n    <Provider store={store}>\n      <Root>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route exact path=\"/post-list\">\n              <PostList />\n            </Route>\n            <Route exact path=\"/new-post\">\n              <NewPost />\n            </Route>\n            <Route exact path=\"/post/:id\">\n              <Page />\n            </Route>\n            <Route exact path=\"/edit-post/:id\">\n              <EditPost />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </Provider>\n  );\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/no-unresolved */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './blog/components/App';\nimport store from './blog/redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}