{"version":3,"sources":["blog/utils.js","blog/WebAPI.js","blog/redux/reducers/userReducer.js","blog/components/Navbar/Navbar.js","blog/redux/reducers/postReducer.js","blog/components/Pages/Homepage/Homepage.js","blog/components/Pages/Loginpage/Loginpage.js","blog/components/Pages/RegisterPage/RegisterPage.js","blog/components/Pages/NewPost/NewPost.js","blog/components/Pages/PostList/PostList.js","blog/components/Pages/EditPost/EditPost.js","blog/components/Pages/Page/Page.js","blog/components/Pages/About/About.js","blog/redux/store.js","blog/components/App/App.js","index.js"],"names":["TOKEN_NAME","MEDIA_QUERY","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","usePrevious","value","ref","useRef","useEffect","current","BASE_URL","getMe","fetch","headers","authorization","then","res","json","userReducer","createSlice","name","initialState","user","errorMessage","reducers","setUser","state","action","payload","setErrorMessage","actions","setNullErrorMessage","dispatch","getUser","username","password","method","body","JSON","stringify","login","ok","response","toString","data","message","register","nickname","registerAPI","NavbarArea","styled","div","NavList","Container","Brand","Link","Nav","props","$active","Navbar","location","useLocation","history","useHistory","useDispatch","useSelector","store","users","to","pathname","onClick","push","postReducer","isLoadingPost","limitPosts","posts","post","editPostResponse","newPostResponse","isLoadingNewPost","setIsLoadingPost","setPosts","setLimitPosts","setPost","setNewPostResponse","setIsLoadingNewPost","setEditPostResponse","getAllPosts","getSomePosts","page","getSomePostsAPI","getPost","id","getPostAPI","addPost","title","newPost","editPost","editPostAPI","console","log","setNullEditPost","deletePost","deletePostAPI","Root","PostContainer","PostTitle","PostTime","Button","Flex","Setting","Post","handleDelete","Date","createdAt","toLocaleString","Homepage","map","LoginForm","form","Title","h2","InputContent","InputName","Input","input","button","ErrorMessage","h3","LoginInput","inputName","inputType","onChange","type","Loginpage","useState","setUsername","setPassword","onSubmit","e","preventDefault","target","LoginBoard","RegisterPage","setNickname","PostBoard","textarea","PostInput","rows","NewPost","setTitle","setBody","prevIsLoadingNewPost","Paginator","Page","Loading","PostList","pages","setPages","allPages","setAllPages","isLoading","listOfPage","i","Math","ceil","length","handleClick","EditPost","useParams","postId","PostContent","About","configureStore","reducer","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.008a26fa.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nconst TOKEN_NAME = \"token\";\n\nexport const MEDIA_QUERY = \"@media screen and (max-width: 768px)\";\n\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token);\n\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME);\n\nexport function usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n","import { getAuthToken } from \"./utils\";\n\nconst BASE_URL = \"https://student-json-api.lidemy.me\";\n\nexport const getPosts = () =>\n  fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`).then((res) =>\n    res.json()\n  );\n\nexport const getSomePosts = (page) =>\n  fetch(\n    `${BASE_URL}/posts?_sort=createdAt&_order=desc&_limit=5&_page=${page}`\n  ).then((res) => res.json());\n\nexport const getPost = (id) =>\n  fetch(`${BASE_URL}/posts/${id}`).then((res) => res.json());\n\nexport const deletePost = (id) =>\n  fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((res) => res.json());\n\nexport const editPost = (id, { title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const login = (username, password) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const getMe = () => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/me`, {\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  }).then((res) => res.json());\n};\n\nexport const newPost = ({ title, body }) => {\n  const token = getAuthToken();\n  return fetch(`${BASE_URL}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      title,\n      body,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const register = (nickname, username, password) =>\n  fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      nickname,\n      username,\n      password,\n    }),\n  }).then((res) => res.json());\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { login, getMe, register as registerAPI } from \"../../WebAPI\";\nimport { setAuthToken } from \"../../utils\";\n\nexport const userReducer = createSlice({\n  name: \"users\",\n  initialState: {\n    user: null,\n\n    errorMessage: null,\n  },\n  reducers: {\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n\n    setErrorMessage: (state, action) => {\n      state.errorMessage = action.payload;\n    },\n  },\n});\n\nexport const { setUser, setErrorMessage } = userReducer.actions;\n\nexport const setNullErrorMessage = () => (dispatch) => {\n  dispatch(setErrorMessage(null));\n};\n\nexport const getUser = (username, password) => (dispatch) => {\n  login(username, password).then((res) => {\n    if (res.ok === 0) {\n      dispatch(setErrorMessage(res.message));\n      return;\n    }\n    setAuthToken(res.token);\n\n    getMe().then((response) => {\n      if (response.ok !== 1) {\n        dispatch(setErrorMessage(response.toString()));\n        setAuthToken(null);\n        return;\n      }\n      dispatch(setUser(response.data));\n    });\n  });\n};\n\nexport const getMeUser = () => (dispatch) => {\n  getMe().then((response) => {\n    if (response.ok) {\n      dispatch(setUser(response.data));\n    }\n  });\n};\n\nexport const logOut = () => (dispatch) => {\n  dispatch(setUser(null));\n};\n\nexport const register = (nickname, username, password) => (dispatch) => {\n  setErrorMessage(null);\n  registerAPI(nickname, username, password).then((data) => {\n    if (data.ok !== 1) {\n      dispatch(setErrorMessage(data.message));\n      return;\n    }\n    setAuthToken(data.token);\n\n    getMe().then((response) => {\n      if (response.ok !== 1) {\n        dispatch(setErrorMessage(response.toString()));\n        setAuthToken(null);\n        return;\n      }\n      dispatch(setUser(response.data));\n    });\n  });\n};\n\nexport default userReducer.reducer;\n","import React from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setAuthToken, MEDIA_QUERY } from \"../../utils\";\nimport { logOut } from \"../../redux/reducers/userReducer\";\n\nconst NavbarArea = styled.div`\n  display: flex;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  height: 64px;\n  position: fixed;\n  border: 1px solid #bfc0c0;\n  align-items: center;\n  padding: 0 30px;\n  background: white;\n\n  ${MEDIA_QUERY} {\n    display: block;\n    height: 130px;\n    justify-content: center;\n    padding: 0;\n  }\n`;\n\nconst NavList = styled.div`\n  display: flex;\n  height: 64px;\n\n  ${MEDIA_QUERY} {\n    height: 64px;\n    justify-content: center;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n\n  ${NavList} {\n    margin-left: 30px;\n    ${MEDIA_QUERY} {\n      margin-left: 0px;\n    }\n  }\n`;\n\nconst Brand = styled(Link)`\n  color: #2d3142;\n  text-decoration: none;\n  font-size: 32px;\n  font-weight: bold;\n  text-align: center;\n  min-width: 200px;\n  ${MEDIA_QUERY} {\n    div {\n      padding: 10px;\n    }\n    justify-content: center;\n  }\n`;\n\nconst Nav = styled(Link)`\n  display: flex;\n  width: 100px;\n  justify-content: center;\n  align-items: center;\n  color: #4f5d75;\n  text-decoration: none;\n  height: 100%;\n  box-sizing: border-box;\n  ${MEDIA_QUERY} {\n    width: 75px;\n  }\n\n  ${(props) => props.$active && \"background: rgba(0, 0, 0, 0.2)\"}\n`;\n\nfunction Navbar() {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n\n  const handleLogout = () => {\n    setAuthToken(\"\");\n    dispatch(logOut());\n    if (location.pathname !== \"/\") {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <NavbarArea>\n      <Brand to=\"/\">\n        <div>部落格 Blog</div>\n      </Brand>\n      <Container>\n        <NavList>\n          <Nav to=\"/\" $active={location.pathname === \"/\"}>\n            首頁\n          </Nav>\n          <Nav to=\"/about\" $active={location.pathname === \"/about\"}>\n            關於我\n          </Nav>\n          <Nav to=\"/post-list\" $active={location.pathname === \"/post-list\"}>\n            文章列表\n          </Nav>\n        </NavList>\n        <NavList>\n          {!user && (\n            <Nav to=\"/register\" $active={location.pathname === \"/register\"}>\n              註冊\n            </Nav>\n          )}\n          {!user && (\n            <Nav to=\"/login\" $active={location.pathname === \"/login\"}>\n              登入\n            </Nav>\n          )}\n          {user && (\n            <Nav to=\"/new-post\" $active={location.pathname === \"/new-post\"}>\n              發布文章\n            </Nav>\n          )}\n          {user && <Nav onClick={handleLogout}>登出</Nav>}\n        </NavList>\n      </Container>\n    </NavbarArea>\n  );\n}\n\nexport default Navbar;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport {\n  editPost as editPostAPI,\n  getSomePosts as getSomePostsAPI,\n  getPosts as getPostsAPI,\n  getPost as getPostAPI,\n  newPost,\n  deletePost as deletePostAPI,\n} from \"../../WebAPI\";\n\nexport const postReducer = createSlice({\n  name: \"posts\",\n  initialState: {\n    isLoadingPost: false,\n    limitPosts: null,\n    posts: null,\n    post: null,\n\n    editPostResponse: null,\n    newPostResponse: null,\n    isLoadingNewPost: false,\n  },\n  reducers: {\n    setIsLoadingPost: (state, action) => {\n      state.isLoadingPost = action.payload;\n    },\n\n    setPosts: (state, action) => {\n      state.posts = action.payload;\n    },\n\n    setLimitPosts: (state, action) => {\n      state.limitPosts = action.payload;\n    },\n\n    setPost: (state, action) => {\n      state.post = action.payload;\n    },\n\n    setNewPostResponse: (state, action) => {\n      state.newPostResponse = action.payload;\n    },\n\n    setIsLoadingNewPost: (state, action) => {\n      state.isLoadingNewPost = action.payload;\n    },\n\n    setEditPostResponse: (state, action) => {\n      state.editPostResponse = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsLoadingPost,\n  setLimitPosts,\n  setPosts,\n  setPost,\n  setNewPostResponse,\n  setIsLoadingNewPost,\n  setEditPostResponse,\n} = postReducer.actions;\n\nexport const getAllPosts = () => (dispatch) => {\n  return getPostsAPI().then((res) => {\n    dispatch(setPosts(res));\n    return res;\n  });\n};\n\nexport const getSomePosts = (page) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getSomePostsAPI(page).then((res) => {\n    dispatch(setLimitPosts(res));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const getPost = (id) => (dispatch) => {\n  dispatch(setIsLoadingPost(true));\n  getPostAPI(id).then((res) => {\n    dispatch(setPost(res));\n    dispatch(setIsLoadingPost(false));\n  });\n};\n\nexport const addPost = (data) => (dispatch) => {\n  dispatch(setIsLoadingNewPost(true));\n  return newPost(data).then((res) => {\n    dispatch(setNewPostResponse(res));\n    dispatch(setIsLoadingNewPost(false));\n    return res;\n  });\n};\n\nexport const editPost = (id, data) => (dispatch) => {\n  dispatch(setIsLoadingNewPost(true));\n  return editPostAPI(id, data).then((res) => {\n    dispatch(setEditPostResponse(res));\n    dispatch(setIsLoadingNewPost(false));\n    console.log(res);\n    return res;\n  });\n};\n\nexport const setNullEditPost = () => (dispatch) => {\n  dispatch(setPost(null));\n};\n\nexport const deletePost = (id) => () => {\n  return deletePostAPI(id).then((res) => res);\n};\n\nexport default postReducer.reducer;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { MEDIA_QUERY } from \"../../../utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deletePost, getAllPosts } from \"../../../redux/reducers/postReducer\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid #bfc0c0;\n  padding: 20px;\n  :hover {\n    background: #bfc0c0;\n  }\n  ${MEDIA_QUERY} {\n    display: block;\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  display: inline-block;\n  align-items: center;\n  max-width: 700px;\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin-left: 10px;\n  ${MEDIA_QUERY} {\n    white-space: pre-line;\n    line-height: 1.5em;\n  }\n`;\n\nconst PostTime = styled.div`\n  display: flex;\n  align-items: center;\n  min-width: 190px;\n  color: #4f5d75;\n  margin-left: 10px;\n  ${MEDIA_QUERY} {\n    padding-top: 10px;\n  }\n`;\n\nconst Button = styled(Link)`\n  margin-left: 10px;\n  padding: 10px;\n  border: 1px solid #ef8354;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 14px;\n  align-items: center;\n  display: flex;\n}\n`;\n\nconst Flex = styled.div`\n  display: flex;\n`;\n\nconst Setting = styled.div`\n  display: flex;\n  width: 120px;\n  ${MEDIA_QUERY} {\n    padding-top: 10px;\n  }\n`;\n\nfunction Post({ post, user, handleDelete }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <Flex>\n        <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n        {user && (\n          <Setting>\n            <Button to={`/edit-post/${post.id}`}>編輯</Button>\n            <Button\n              onClick={() => {\n                handleDelete(post.id);\n              }}\n            >\n              刪除\n            </Button>\n          </Setting>\n        )}\n      </Flex>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.object),\n  user: PropTypes.string,\n  handleDelete: PropTypes.func,\n};\n\nfunction Homepage() {\n  const user = useSelector((store) => store.users.user);\n  const posts = useSelector((store) => store.posts.posts);\n  const dispatch = useDispatch();\n  const handleDelete = (id) => {\n    dispatch(deletePost(id)).then(() => {\n      dispatch(getAllPosts());\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getAllPosts());\n  }, []);\n\n  return (\n    <Root>\n      {posts &&\n        posts.map((post) => (\n          <Post\n            key={post.id}\n            post={post}\n            user={user}\n            handleDelete={handleDelete}\n          />\n        ))}\n    </Root>\n  );\n}\n\nexport default Homepage;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getUser,\n  setNullErrorMessage,\n} from \"../../../redux/reducers/userReducer\";\nimport { MEDIA_QUERY } from \"../../../utils\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst LoginForm = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  height: 280px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n\n  ${MEDIA_QUERY} {\n    margin: 5% 0;\n    height: 400px;\n  }\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n  ${MEDIA_QUERY} {\n    font-size: 24px;\n    margin: 20px;\n  }\n`;\nconst InputContent = styled.div`\n  margin: 10px 0;\n  display: flex;\n  justify-content: center;\n  ${MEDIA_QUERY} {\n    display: block;\n  }\n`;\nconst InputName = styled.div`\n  font-size: 16px;\n  color: #ffffff;\n  ${MEDIA_QUERY} {\n    font-size: 20px;\n    margin: 10px;\n  }\n`;\n\nconst Input = styled.input`\n  padding: 5px;\n  width: 200px;\n  border: none;\n  ${MEDIA_QUERY} {\n    padding: 10px;\n    width: 80%;\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  ${MEDIA_QUERY} {\n    padding: 15px 20px;\n    font-size: 16px;\n  }\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n  ${MEDIA_QUERY} {\n    margin: 5px;\n  }\n`;\n\nfunction LoginInput({ inputName, inputType, value, onChange }) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nLoginInput.propTypes = {\n  inputName: PropTypes.string,\n  inputType: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nfunction Loginpage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((store) => store.users.user);\n  const errorMessage = useSelector((store) => store.users.errorMessage);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(getUser(username, password));\n  };\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/\");\n    }\n    return () => {\n      dispatch(setNullErrorMessage());\n    };\n  }, [user, history, dispatch]);\n\n  return (\n    <Root>\n      <LoginForm onSubmit={handleSubmit}>\n        <Title>Login</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <LoginInput\n          inputName=\"Username：\"\n          inputType=\"text\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <LoginInput\n          inputName=\"Passwrod：\"\n          inputType=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <Button>Submit</Button>\n      </LoginForm>\n    </Root>\n  );\n}\n\nexport default Loginpage;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { MEDIA_QUERY } from \"../../../utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  register,\n  setNullErrorMessage,\n} from \"../../../redux/reducers/userReducer\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst LoginBoard = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  min-height: 300px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n  ${MEDIA_QUERY} {\n    margin: 5% 0;\n    height: 500px;\n  }\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n  ${MEDIA_QUERY} {\n    font-size: 24px;\n    margin: 10px;\n  }\n`;\nconst InputContent = styled.div`\n  margin: 10px 0;\n  display: flex;\n  justify-content: center;\n  ${MEDIA_QUERY} {\n    display: block;\n  }\n`;\nconst InputName = styled.div`\n  font-size: 16px;\n  color: #ffffff;\n  ${MEDIA_QUERY} {\n    font-size: 20px;\n    margin: 10px;\n  }\n`;\nconst Input = styled.input`\n  padding: 5px;\n  width: 200px;\n  border: none;\n  ${MEDIA_QUERY} {\n    padding: 10px;\n    width: 80%;\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  ${MEDIA_QUERY} {\n    padding: 15px 20px;\n    font-size: 16px;\n  }\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n  ${MEDIA_QUERY} {\n    margin: 5px;\n  }\n`;\n\nfunction LoginInput({ inputName, inputType, value, onChange }) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nLoginInput.propTypes = {\n  inputName: PropTypes.string,\n  inputType: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nfunction RegisterPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const errorMessage = useSelector((store) => store.users.errorMessage);\n  const user = useSelector((store) => store.users.user);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(register(nickname, username, password));\n  };\n\n  useEffect(() => {\n    if (user) {\n      history.push(\"/\");\n    }\n    return () => {\n      dispatch(setNullErrorMessage());\n    };\n  }, [user, history]);\n\n  return (\n    <Root>\n      <LoginBoard onSubmit={handleSubmit}>\n        <Title>Register</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <LoginInput\n          inputName=\"Nickname：\"\n          inputType=\"text\"\n          value={nickname}\n          onChange={(e) => {\n            setNickname(e.target.value);\n          }}\n        />\n        <LoginInput\n          inputName=\"Username：\"\n          inputType=\"text\"\n          value={username}\n          onChange={(e) => {\n            setUsername(e.target.value);\n          }}\n        />\n        <LoginInput\n          inputName=\"Passwrod：\"\n          inputType=\"password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n          }}\n        />\n        <Button>Submit</Button>\n      </LoginBoard>\n    </Root>\n  );\n}\n\nexport default RegisterPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPost } from \"../../../redux/reducers/postReducer\";\nimport { usePrevious, MEDIA_QUERY } from \"../../../utils\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst PostBoard = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  height: 500px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n  ${MEDIA_QUERY} {\n    margin: 5% 0;\n    height: 550px;\n  }\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n`;\nconst InputContent = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  text-align: left;\n  ${MEDIA_QUERY} {\n    width: 95%;\n    font-size: 16px;\n  }\n`;\nconst InputName = styled.div`\n  font-size: 18px;\n  color: #ffffff;\n  margin: 5px;\n`;\nconst Input = styled.textarea`\n  padding: 5px;\n  width: 450px;\n  border: none;\n  ${MEDIA_QUERY} {\n    width: 95%;\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  ${MEDIA_QUERY} {\n    padding: 15px 20px;\n    font-size: 16px;\n  }\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n`;\n\nfunction PostInput({ inputName, inputType, value, onChange, rows }) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input rows={rows} type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nPostInput.propTypes = {\n  inputName: PropTypes.string,\n  inputType: PropTypes.string,\n  value: PropTypes.string,\n  rows: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nfunction NewPost() {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const newPostResponse = useSelector((store) => store.posts.newPostResponse);\n  const isLoadingNewPost = useSelector((store) => store.posts.isLoadingNewPost);\n  const prevIsLoadingNewPost = usePrevious(isLoadingNewPost);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrorMessage(null);\n    if (!title || !body) {\n      return setErrorMessage(\"Please Filled Out the Form.\");\n    }\n\n    return dispatch(addPost({ title, body }));\n  };\n\n  useEffect(() => {\n    if (!isLoadingNewPost && prevIsLoadingNewPost) {\n      if (newPostResponse && newPostResponse.id) {\n        history.push(`/post/${newPostResponse.id}`);\n      }\n    }\n  }, [newPostResponse, history, isLoadingNewPost, prevIsLoadingNewPost]);\n\n  return (\n    <Root>\n      <PostBoard onSubmit={handleSubmit}>\n        <Title>發布文章</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        <PostInput\n          inputName=\"Title：\"\n          inputType=\"text\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        />\n        <PostInput\n          inputName=\"Content：\"\n          inputType=\"text\"\n          rows=\"10\"\n          value={body}\n          onChange={(e) => {\n            setBody(e.target.value);\n          }}\n        />\n        <Button>Submit</Button>\n      </PostBoard>\n    </Root>\n  );\n}\n\nexport default NewPost;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllPosts, getSomePosts } from \"../../../redux/reducers/postReducer\";\nimport { MEDIA_QUERY } from \"../../../utils\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid #bfc0c0;\n  padding: 20px;\n  align-items: center;\n  :hover {\n    background: #bfc0c0;\n  }\n  ${MEDIA_QUERY} {\n    display: block;\n  }\n`;\n\nconst PostTitle = styled(Link)`\n  display: inline-block;\n  align-items: center;\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 700px;\n  white-space: nowrap;\n  ${MEDIA_QUERY} {\n    white-space: pre-line;\n    line-height: 1.5em;\n  }\n`;\n\nconst PostTime = styled.div`\n  color: #4f5d75;\n  min-width: 190px;\n  margin-left: 10px;\n  ${MEDIA_QUERY} {\n    padding-top: 10px;\n  }\n`;\n\nconst Paginator = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Page = styled.div`\n  width: 10px;\n  margin-top: 20px;\n  padding: 5px 10px;\n  background: #ef8354;\n  color: #ffffff;\n  cursor: pointer;\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  bottom: 0px;\n  position: absolute;\n  background: rgba(0, 0, 0, 0.2);\n  justify-content: center;\n  font-size: 25px;\n  text-align: center;\n  align-items: center;\n`;\n\nfunction Post({ post }) {\n  return (\n    <PostContainer>\n      <PostTitle to={`/post/${post.id}`}>{post.title}</PostTitle>\n      <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n    </PostContainer>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.objectOf(PropTypes.object),\n};\n\nfunction PostList() {\n  const [pages, setPages] = useState([1]);\n  const [allPages, setAllPages] = useState([]);\n  const dispatch = useDispatch();\n  const posts = useSelector((store) => store.posts.posts);\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const limitPosts = useSelector((store) => store.posts.limitPosts);\n\n  useEffect(() => {\n    dispatch(getAllPosts()).then((res) => {\n      if (res) {\n        const listOfPage = [];\n        for (let i = 1; i <= Math.ceil(res.length / 5); i += 1) {\n          listOfPage.push(i);\n        }\n        setAllPages(listOfPage);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getSomePosts(pages));\n  }, [pages, dispatch]);\n\n  const handleClick = (page) => {\n    setPages(page);\n  };\n\n  return (\n    <Root>\n      {isLoading && <Loading>載入中</Loading>}\n      {limitPosts &&\n        limitPosts.map((post) => <Post key={post.id} post={post} />)}\n      <Paginator>\n        {allPages.map((page) => (\n          <Page key={page} onClick={() => handleClick(page)}>\n            {page}\n          </Page>\n        ))}\n      </Paginator>\n    </Root>\n  );\n}\n\nexport default PostList;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  editPost,\n  getPost,\n  setNullEditPost,\n} from \"../../../redux/reducers/postReducer\";\nimport { usePrevious, MEDIA_QUERY } from \"../../../utils\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst PostBoard = styled.form`\n  background: #ef8354;\n  margin: 10%;\n  height: 500px;\n  align-items: center;\n  text-align: center;\n  border: 1px solid #ef8354;\n  padding-top: 40px;\n  ${MEDIA_QUERY} {\n    margin: 5% 0;\n    height: 550px;\n  }\n`;\nconst Title = styled.h2`\n  color: #ffffff;\n`;\nconst InputContent = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  text-align: left;\n  ${MEDIA_QUERY} {\n    width: 95%;\n    font-size: 16px;\n  }\n`;\nconst InputName = styled.div`\n  font-size: 18px;\n  color: #ffffff;\n  margin: 5px;\n`;\nconst Input = styled.textarea`\n  padding: 5px;\n  width: 450px;\n  border: none;\n  ${MEDIA_QUERY} {\n    width: 95%;\n    font-size: 16px;\n  }\n`;\n\nconst Button = styled.button`\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  ${MEDIA_QUERY} {\n    padding: 15px 20px;\n    font-size: 16px;\n  }\n`;\n\nconst ErrorMessage = styled.h3`\n  color: #2d3142;\n`;\n\nfunction PostInput({ inputName, inputType, value, onChange, rows }) {\n  return (\n    <div>\n      <InputContent>\n        <InputName>{inputName}</InputName>\n        <Input rows={rows} type={inputType} onChange={onChange} value={value} />\n      </InputContent>\n    </div>\n  );\n}\n\nPostInput.propTypes = {\n  inputName: PropTypes.string,\n  inputType: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  rows: PropTypes.number,\n};\n\nfunction EditPost() {\n  const { id } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const post = useSelector((store) => store.posts.post);\n  const editPostResponse = useSelector((store) => store.posts.editPostResponse);\n  const isLoadingNewPost = useSelector((store) => store.posts.isLoadingNewPost);\n  const prevIsLoadingNewPost = usePrevious(isLoadingNewPost);\n\n  const handleSubmit = (postId) => {\n    setErrorMessage(null);\n    if (!title || !body) {\n      return setErrorMessage(\"Please Filled Out the Form.\");\n    }\n    return dispatch(editPost(postId, { title, body }));\n  };\n\n  useEffect(() => {\n    if (!isLoadingNewPost && !prevIsLoadingNewPost) {\n      dispatch(getPost(id));\n      if (post) {\n        setTitle(post.title);\n        setBody(post.body);\n      }\n    }\n\n    if (!isLoadingNewPost && prevIsLoadingNewPost) {\n      if (editPostResponse && editPostResponse.id) {\n        history.push(`/post/${editPostResponse.id}`);\n      }\n    }\n\n    return () => {\n      dispatch(setNullEditPost());\n    };\n  }, [id, editPostResponse, history, isLoadingNewPost, prevIsLoadingNewPost]);\n\n  return (\n    <Root>\n      <PostBoard onSubmit={() => handleSubmit(post.id)}>\n        <Title>編輯文章</Title>\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n        {post && (\n          <PostInput\n            inputName=\"Title：\"\n            inputType=\"text\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n          />\n        )}\n        {post && (\n          <PostInput\n            inputName=\"Content：\"\n            inputType=\"text\"\n            rows=\"10\"\n            value={body}\n            onChange={(e) => {\n              setBody(e.target.value);\n            }}\n          />\n        )}\n        <Button>Submit</Button>\n      </PostBoard>\n    </Root>\n  );\n}\n\nexport default EditPost;\n","import React, { useEffect } from \"react\";\nimport { useParams, useHistory, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getPost,\n  deletePost,\n  setNullEditPost,\n} from \"../../../redux/reducers/postReducer\";\nimport { MEDIA_QUERY } from \"../../../utils\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst PostContainer = styled.div`\n  justify-content: space-between;\n  border-bottom: 1px solid grey;\n  padding: 20px;\n  ${MEDIA_QUERY} {\n    display: block;\n  }\n`;\n\nconst PostTitle = styled.div`\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n`;\n\nconst PostTime = styled.div`\n  color: #4f5d75;\n  display: flex;\n  align-items: center;\n  padding-top: 10px;\n`;\n\nconst PostContent = styled.div`\n  padding: 20px;\n  color: #4f5d75;\n  line-height: 2em;\n  word-break: break-all;\n  white-space: break-spaces;\n`;\n\nconst Loading = styled.div`\n  display: flex;\n  top: 0px;\n  right: 0px;\n  left: 0px;\n  bottom: 0px;\n  position: absolute;\n  background: rgba(0, 0, 0, 0.2);\n  justify-content: center;\n  font-size: 25px;\n  text-align: center;\n  align-items: center;\n`;\n\nconst Button = styled(Link)`\n  margin-left: 10px;\n  padding: 10px;\n  border: 1px solid #ef8354;\n  background: white;\n  color: #ef8354;\n  cursor: pointer;\n  border-radius: 5px;\n  text-decoration: none;\n  font-size: 14px;\n  text-align: center;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nfunction Page() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const isLoading = useSelector((store) => store.posts.isLoadingPost);\n  const post = useSelector((store) => store.posts.post);\n  const user = useSelector((store) => store.users.user);\n  const handleDelete = (postId) => {\n    dispatch(deletePost(postId)).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getPost(id));\n\n    return () => {\n      dispatch(setNullEditPost());\n    };\n  }, [id, dispatch]);\n\n  return (\n    <Root>\n      {post && (\n        <>\n          <PostContainer>\n            <PostTitle>{post.title}</PostTitle>\n            <Flex>\n              <PostTime>{new Date(post.createdAt).toLocaleString()}</PostTime>\n              <div>\n                {user && <Button to={`/edit-post/${post.id}`}>編輯</Button>}\n                {user && (\n                  <Button\n                    onClick={() => {\n                      handleDelete(post.id);\n                    }}\n                  >\n                    刪除\n                  </Button>\n                )}\n              </div>\n            </Flex>\n          </PostContainer>\n          <PostContent>{post.body}</PostContent>\n        </>\n      )}\n      {isLoading && <Loading>載入中</Loading>}\n    </Root>\n  );\n}\n\nexport default Page;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MEDIA_QUERY } from \"../../../utils\";\n\nconst Root = styled.div`\n  margin: 0 auto;\n  width: 80%;\n  ${MEDIA_QUERY} {\n    width: 95%;\n  }\n`;\n\nconst PostContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid grey;\n  padding: 20px;\n`;\n\nconst PostTitle = styled.div`\n  font-size: 20px;\n  text-decoration: none;\n  color: #2d3142;\n`;\n\nconst PostContent = styled.div`\n  padding: 20px;\n  color: #4f5d75;\n  line-height: 2em;\n  word-break: break-all;\n  white-space: break-spaces;\n`;\n\nfunction About() {\n  return (\n    <Root>\n      <PostContainer>\n        <PostTitle>關於我</PostTitle>\n      </PostContainer>\n      <PostContent>安安你好啊～ 這是我的部落格</PostContent>\n    </Root>\n  );\n}\n\nexport default About;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-unresolved */\nimport { configureStore } from '@reduxjs/toolkit';\nimport postReducer from './reducers/postReducer';\nimport userReducer from './reducers/userReducer';\n\nexport default configureStore({\n  reducer: {\n    posts: postReducer,\n    users: userReducer,\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Provider, useDispatch } from \"react-redux\";\nimport Navbar from \"../Navbar\";\nimport Homepage from \"../Pages/Homepage\";\nimport LoginPage from \"../Pages/Loginpage\";\nimport RegisterPage from \"../Pages/RegisterPage\";\nimport NewPost from \"../Pages/NewPost\";\nimport PostList from \"../Pages/PostList\";\nimport EditPost from \"../Pages/EditPost\";\nimport Page from \"../Pages/Page\";\nimport AboutPage from \"../Pages/About\";\nimport { getAuthToken, MEDIA_QUERY } from \"../../utils\";\nimport store from \"../../redux/store\";\nimport { getMeUser } from \"../../redux/reducers/userReducer\";\n\nconst Root = styled.div`\n  padding-top: 64px;\n  ${MEDIA_QUERY} {\n    padding-top: 130px;\n  }\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const token = getAuthToken();\n    if (token) {\n      dispatch(getMeUser());\n    }\n  }, [dispatch]);\n\n  return (\n    <Provider store={store}>\n      <Root>\n        <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n            </Route>\n            <Route exact path=\"/about\">\n              <AboutPage />\n            </Route>\n            <Route exact path=\"/post-list\">\n              <PostList />\n            </Route>\n            <Route exact path=\"/new-post\">\n              <NewPost />\n            </Route>\n            <Route exact path=\"/post/:id\">\n              <Page />\n            </Route>\n            <Route exact path=\"/edit-post/:id\">\n              <EditPost />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./blog/components/App\";\nimport store from \"./blog/redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}